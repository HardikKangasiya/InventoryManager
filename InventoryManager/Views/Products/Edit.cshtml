@model InventoryManager.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Product_name, htmlAttributes: new { @class = "control-label bold-label" })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Product_qnty, htmlAttributes: new { @class = "control-label bold-label" })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product_qnty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product_qnty, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <p>
            <input type="submit" value="Save" class="btn btn-primary" /> |
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </p>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

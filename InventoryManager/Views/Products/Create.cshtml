@model InventoryManager.Models.Product

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.Product_name, htmlAttributes: new { @class = "control-label col-md-2 bold-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product_name, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group row">
            @Html.LabelFor(model => model.Product_qnty, htmlAttributes: new { @class = "control-label col-md-2 bold-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product_qnty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product_qnty, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <br />
    <p>
        <input type="submit" value="Create" class="btn btn-primary" /> |
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
    </p>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
